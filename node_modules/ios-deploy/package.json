{
  "name": "ios-deploy",
  "version": "1.3.2",
  "description": "launch iOS apps iOS devices from the command line (Xcode 6)",
  "main": "ios-deploy",
  "scripts": {
    "preinstall": "make ios-deploy"
  },
  "bin": {
    "ios-deploy": "./ios-deploy"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/phonegap/ios-deploy"
  },
  "keywords": [
    "ios-deploy",
    "deploy to iOS device"
  ],
  "author": {
    "name": "Greg Hughes"
  },
  "license": "GPLv3",
  "readme": "ios-deploy\n==========\nInstall and debug iOS apps without using Xcode. Designed to work on un-jailbroken devices.\n\n## Requirements\n\n* Mac OS X. Tested on 10.10 Yosemite and iOS 8.1\n* You need to have a valid iOS development certificate installed.\n* Xcode 6.1 should be installed\n\n## Usage\n\n    Usage: ios-deploy [OPTION]...\n      -d, --debug                  launch the app in GDB after installation\n      -i, --id <device_id>         the id of the device to connect to\n      -c, --detect                 only detect if the device is connected\n      -b, --bundle <bundle.app>    the path to the app bundle to be installed\n      -a, --args <args>            command line arguments to pass to the app when launching it\n      -t, --timeout <timeout>      number of seconds to wait for a device to be connected\n      -u, --unbuffered             don't buffer stdout\n      -n, --nostart                do not start the app when debugging\n      -I, --noninteractive         start in non interactive mode (quit when app crashes or exits)\n      -L, --justlaunch             just launch the app and exit lldb\n      -v, --verbose                enable verbose output\n      -m, --noinstall              directly start debugging without app install (-d not required)\n      -p, --port <number>          port used for device, default: 12345 \n      -r, --uninstall              uninstall the app before install (do not use with -m; app cache and data are cleared) \n      -1, --bundle_id <bundle id>  specify bundle id for list and upload\n      -l, --list                   list files\n      -o, --upload <file>          upload file\n      -w, --download               download app tree\n      -2, --to <target pathname>   use together with up/download file/tree. specify target\n      -V, --version                print the executable version \n\n## Examples\n\nThe commands below assume that you have an app called `my.app` with bundle id `bundle.id`. Substitute where necessary.\n\n    // deploy and debug your app to a connected device\n    ios-deploy --debug --bundle my.app\n\n    // deploy and launch your app to a connected device, but quit the debugger after\n    ios-deploy --justlaunch --debug --bundle my.app\n\n    // deploy and launch your app to a connected device, quit when app crashes or exits\n    ios-deploy --noninteractive --debug --bundle my.app\n\n    // Upload a file to your app's Documents folder\n    ios-deploy --bundle_id 'bundle.id' --upload test.txt --to Documents/test.txt\n    \n    // Download your app's Documents, Library and tmp folders\n    ios-deploy --bundle_id 'bundle.id' --download --to MyDestinationFolder\n\n    // List the contents of your app's Documents, Library and tmp folders\n    ios-deploy --bundle_id 'bundle.id' --list\n\n    // deploy and debug your app to a connected device, uninstall the app first\n    ios-deploy --uninstall --debug --bundle my.app\n    \n## Demo\n\n* The included demo.app represents the minimum required to get code running on iOS.\n* `make install` will install demo.app to the device.\n* `make debug` will install demo.app and launch a GDB session.\n\n## Notes\n\n* With some modifications, it may be possible to use this without Xcode installed; however, you would need a copy of the relevant DeveloperDiskImage.dmg (included with Xcode). lldb would also run slower as symbols would be downloaded from the device on-the-fly.\n\n\n## Listing Device Ids\n\nDevice Ids are the UDIDs of the iOS devices. From the command line, you can list device ids [this way](http://javierhz.blogspot.com/2012/06/how-to-get-udid-of-iphone-using-shell.html):\n\n        system_profiler SPUSBDataType | sed -n -e '/iPod/,/Serial/p' | sed -n -e '/iPad/,/Serial/p' -e '/iPhone/,/Serial/p' | grep \"Serial Number:\" | awk -F \": \" '{print $2}'\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/phonegap/ios-deploy/issues"
  },
  "homepage": "https://github.com/phonegap/ios-deploy",
  "_id": "ios-deploy@1.3.2",
  "_from": "ios-deploy@"
}
